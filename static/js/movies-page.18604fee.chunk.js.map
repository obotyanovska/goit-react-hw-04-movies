{"version":3,"sources":["Component/SearchBar/SearchBar.js","Views/MoviesPage/MoviesPage.js","Services/api-services.js","Component/SearchBar/SearchBar.module.scss"],"names":["SearchBar","state","value","onInputChange","e","setState","currentTarget","onHandleSubmit","preventDefault","props","onSubmit","resetInput","this","className","styles","SearchForm","type","autoComplete","autoFocus","placeholder","onChange","SearchForm__btn","Component","MoviesList","lazy","MoviesPage","movies","searchQuery","fetchMovies","fetchMovieByName","then","response","catch","error","console","log","prevProps","prevState","history","push","search","fallback","Spinner","length","API_KEY","BASE_URL","fetchTrendingMovies","a","axios","get","data","results","query","fetchMovieById","movie_id","module","exports"],"mappings":"oQAkDeA,E,4MAzCbC,MAAQ,CACNC,MAAO,I,EAGTC,cAAgB,SAAAC,GACd,EAAKC,SAAS,CAAEH,MAAOE,EAAEE,cAAcJ,S,EAGzCK,eAAiB,SAAAH,GACfA,EAAEI,iBACF,EAAKC,MAAMC,SAAS,EAAKT,MAAMC,OAC/B,EAAKS,c,EAGPA,WAAa,WACX,EAAKN,SAAS,CAAEH,MAAO,M,4CAGzB,WACE,IAAQA,EAAUU,KAAKX,MAAfC,MACR,OACE,qBAAKW,UAAWC,IAAOd,UAAvB,SACE,uBAAMa,UAAWC,IAAOC,WAAYL,SAAUE,KAAKL,eAAnD,UACE,uBACES,KAAK,OACLd,MAAOA,EACPe,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,SAAUR,KAAKT,gBAGjB,wBAAQa,KAAK,SAASH,UAAWC,IAAOO,gBAAxC,6B,GArCcC,a,QCClBC,EAAaC,gBAAK,kBACtB,gCA0CaC,E,4MAtCbxB,MAAQ,CACNyB,OAAQ,GACRC,YAAa,M,EAWfC,YAAc,WACZ,IAAQD,EAAgB,EAAK1B,MAArB0B,YACRE,YAAiBF,GACdG,MAAK,SAAAC,GAAQ,OAAI,EAAK1B,SAAS,CAAEqB,OAAQK,OACzCC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,O,EAGhCvB,SAAW,SAAAR,GACT,EAAKG,SAAS,CAAEsB,YAAazB,K,wDAhB/B,SAAmBkC,EAAWC,GAC5B,IAAQV,EAAgBf,KAAKX,MAArB0B,YACJU,EAAUV,cAAgBA,IAC5Bf,KAAKH,MAAM6B,QAAQC,KAAK,CAAEC,OAAO,SAAD,OAAWb,KAC3Cf,KAAKgB,iB,oBAeT,WACE,IAAQF,EAAWd,KAAKX,MAAhByB,OACR,OACE,qCACE,cAAC,EAAD,CAAWhB,SAAUE,KAAKF,WAE1B,cAAC,WAAD,CAAU+B,SAAU,cAACC,EAAA,EAAD,IAApB,SACGhB,EAAOiB,OAAS,GAAK,cAACpB,EAAD,CAAYG,OAAQA,a,GAhC3BJ,c,oLCPnBsB,EAAU,mCACVC,EAAW,+BAEXC,EAAmB,uCAAG,4BAAAC,EAAA,sEACHC,IAAMC,IAAN,UAClBJ,EADkB,qCACmBD,IAFhB,cACpBb,EADoB,yBAInBA,EAASmB,KAAKC,SAJK,2CAAH,qDAOnBtB,EAAgB,uCAAG,WAAMuB,GAAN,eAAAL,EAAA,sEACAC,IAAMC,IAAN,UAClBJ,EADkB,iCACeD,EADf,kBACgCQ,IAFhC,cACjBrB,EADiB,yBAIhBA,EAASmB,KAAKC,SAJE,2CAAH,sDAOhBE,EAAc,uCAAG,WAAMC,GAAN,eAAAP,EAAA,sEACEC,IAAMC,IAAN,UAClBJ,EADkB,kBACAS,EADA,oBACoBV,EADpB,wCADF,cACfb,EADe,yBAIdA,EAASmB,MAJK,2CAAH,uD,mBClBpBK,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,gBAAkB","file":"static/js/movies-page.18604fee.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SearchBar.module.scss';\n\nclass SearchBar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func,\n  };\n\n  state = {\n    value: '',\n  };\n\n  onInputChange = e => {\n    this.setState({ value: e.currentTarget.value });\n  };\n\n  onHandleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.value);\n    this.resetInput();\n  };\n\n  resetInput = () => {\n    this.setState({ value: '' });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <div className={styles.SearchBar}>\n        <form className={styles.SearchForm} onSubmit={this.onHandleSubmit}>\n          <input\n            type=\"text\"\n            value={value}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            onChange={this.onInputChange}\n          />\n\n          <button type=\"submit\" className={styles.SearchForm__btn}>\n            Search\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React, { Component, Suspense, lazy } from 'react';\nimport { fetchMovieByName } from '../../Services/api-services';\nimport SearchBar from '../../Component/SearchBar';\nimport Spinner from '../../Component/Spinner/Spinner.js';\n\nconst MoviesList = lazy(() =>\n  import('../../Component/MoviesList' /* webpackChunkName: 'movies-list' */),\n);\n\nclass MoviesPage extends Component {\n  state = {\n    movies: [],\n    searchQuery: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery } = this.state;\n    if (prevState.searchQuery !== searchQuery) {\n      this.props.history.push({ search: `query=${searchQuery}` });\n      this.fetchMovies();\n    }\n  }\n\n  fetchMovies = () => {\n    const { searchQuery } = this.state;\n    fetchMovieByName(searchQuery)\n      .then(response => this.setState({ movies: response }))\n      .catch(error => console.log(error));\n  };\n\n  onSubmit = value => {\n    this.setState({ searchQuery: value });\n  };\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <>\n        <SearchBar onSubmit={this.onSubmit} />\n\n        <Suspense fallback={<Spinner />}>\n          {movies.length > 0 && <MoviesList movies={movies} />}\n        </Suspense>\n      </>\n    );\n  }\n}\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = '384eb8ab4176debc217be91023edb374';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`,\n  );\n  return response.data.results;\n};\n\nconst fetchMovieByName = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`,\n  );\n  return response.data.results;\n};\n\nconst fetchMovieById = async movie_id => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}&append_to_response=credits,reviews`,\n  );\n  return response.data;\n};\n\nexport { fetchTrendingMovies, fetchMovieByName, fetchMovieById };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBar_SearchBar__3ln-X\",\"SearchForm\":\"SearchBar_SearchForm__2GLA0\",\"SearchForm__btn\":\"SearchBar_SearchForm__btn__3r5zG\"};"],"sourceRoot":""}